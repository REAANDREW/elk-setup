- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    project_name: "demo"
    env: "staging" # env name, this will be used as an inventory file name
    app_code_user: "ubuntu" # remote user
    instance_type: t2.micro  # AWS instance type
    ami: "ami-e109bd92"
    vpc_id: "vpc-db89cebe"
    aws_region: "eu-west-1"
  tasks:
    -   name: Create security group
        ec2_group:
            name: "{{ project_name }}_security_group"
            description: "{{ project_name }} security group"
            region: "{{ aws_region }}"
            vpc_id: "{{ vpc_id  }}"
            rules:
                - proto: tcp
                  from_port: 22
                  to_port: 22
                  cidr_ip: 0.0.0.0/0
                - proto: tcp
                  from_port: 80
                  to_port: 80
                  cidr_ip: 0.0.0.0/0
                - proto: tcp
                  from_port: 443
                  to_port: 443
                  cidr_ip: 0.0.0.0/0
            rules_egress:
                - proto: all
                  cidr_ip: 0.0.0.0/0
        register: basic_firewall
    -   name: Create an EC2 key
        ec2_key:
            name: "{{ project_name }}-{{ env }}-key"
            key_material: "{{ item }}"
            region: "{{ aws_region }}"
            state: present
        with_file: ./keys/public/id_rsa.pub
        register: ec2_key
    -   name: Create an EC2 instance
        ec2:
            key_name: "{{ project_name }}-{{ env }}-key"
            region: "{{ aws_region }}"
            group_id: "{{ basic_firewall.group_id }}"
            instance_type: "{{ instance_type }}"
            image: "{{ ami }}"
            wait: yes
            instance_tags:
                env: "{{ env }}"
            count_tag: env
            exact_count: 1
        register: ec2
    -   name: save IP to inventory file
        copy: content="[webservers]{{'\n'}}{{ item.public_dns_name }}" dest=./{{ env }}
        with_items: ec2.tagged_instances
    -   name: Add IP to ec2_hosts group
        add_host: hostname={{ item.public_dns_name }} groups=ec2_hosts
        with_items: ec2.tagged_instances
